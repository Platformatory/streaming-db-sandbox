---
version: '2'
services:
  init:
    image: confluentinc/cp-kafka:7.4.1
    entrypoint:
      - /bin/bash
      - -c
      - |
        cat <<EOF >>/tmp/client.properties
        security.protocol=SASL_SSL
        sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$KAFKA_SASL_USERNAME" password="$KAFKA_SASL_PASSWORD";
        sasl.mechanism=PLAIN
        EOF

        kafka-topics --bootstrap-server $KAFKA_BOOTSTRAP_SERVERS \
              --command-config /tmp/client.properties \
              --create --if-not-exists \
              --partitions 6 --topic $KAFKA_TOPIC

        kafka-topics --bootstrap-server $KAFKA_BOOTSTRAP_SERVERS \
              --command-config /tmp/client.properties \
              --create --if-not-exists \
              --partitions 6 --topic $KAFKA_OUTPUT_TOPIC
    command: echo "Done"
    environment:
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_SASL_USERNAME: ${KAFKA_SASL_USERNAME}
      KAFKA_SASL_PASSWORD: ${KAFKA_SASL_PASSWORD}
      KAFKA_OUTPUT_TOPIC: ${KAFKA_OUTPUT_TOPIC:-temperature_converted_rising_wave}
    restart: on-failure

  producer:
    build: ../producer
    depends_on:
      - init
    environment:
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_SASL_USERNAME: ${KAFKA_SASL_USERNAME}
      KAFKA_SASL_PASSWORD: ${KAFKA_SASL_PASSWORD}

  compactor:
    image: "ghcr.io/risingwavelabs/risingwave:v1.1.2"
    command:
      - compactor-node
      - "--listen-addr"
      - "0.0.0.0:6660"
      - "--advertise-addr"
      - "compactor:6660"
      - "--meta-address"
      - "http://meta-node:5690"
      - "--config-path"
      - /risingwave.toml
    expose:
      - "6660"
    ports: []
    depends_on:
      - meta-node
      # - minio
    volumes:
      - "./risingwave.toml:/risingwave.toml"
    environment:
      RUST_BACKTRACE: "1"
    container_name: compactor
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/6660; exit $$?;'
      interval: 1s
      timeout: 5s
      retries: 5
  compute-node:
    image: "ghcr.io/risingwavelabs/risingwave:v1.1.2"
    command:
      - compute-node
      - "--listen-addr"
      - "0.0.0.0:5688"
      - "--advertise-addr"
      - "compute-node:5688"
      - "--meta-address"
      - "http://meta-node:5690"
      - "--connector-rpc-endpoint"
      - "connector-node:50051"
      - "--config-path"
      - /risingwave.toml
    expose:
      - "5688"
    ports: []
    depends_on:
      - meta-node
      # - minio
    volumes:
      - "./risingwave.toml:/risingwave.toml"
    environment:
      RUST_BACKTRACE: "1"
    container_name: compute-node
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5688; exit $$?;'
      interval: 1s
      timeout: 5s
      retries: 5
  etcd:
    image: "quay.io/coreos/etcd:v3.5.7"
    command:
      - /usr/local/bin/etcd
      - "--listen-client-urls"
      - "http://0.0.0.0:2388"
      - "--advertise-client-urls"
      - "http://etcd:2388"
      - "--listen-peer-urls"
      - "http://0.0.0.0:2389"
      - "--initial-advertise-peer-urls"
      - "http://etcd:2389"
      - "--listen-metrics-urls"
      - "http://0.0.0.0:2379"
      - "--name"
      - risedev-meta
      - "--max-txn-ops"
      - "999999"
      - "--max-request-bytes"
      - "10485760"
      - "--auto-compaction-mode"
      - periodic
      - "--auto-compaction-retention"
      - 1m
      - "--snapshot-count"
      - "10000"
      - "--data-dir"
      - /etcd-data
    expose:
      - "2388"
    ports:
      - "2388:2388"
      - "2389:2389"
    depends_on: []
    volumes:
      - "etcd:/etcd-data"
    environment: {}
    container_name: etcd
    healthcheck:
      test:
        - CMD
        - etcdctl
        - --endpoints=http://localhost:2388
        - endpoint
        - health
      interval: 1s
      timeout: 5s
      retries: 5
  frontend-node:
    image: "ghcr.io/risingwavelabs/risingwave:v1.1.2"
    command:
      - frontend-node
      - "--listen-addr"
      - "0.0.0.0:4566"
      - "--meta-addr"
      - "http://meta-node:5690"
      - "--advertise-addr"
      - "frontend-node:4566"
      - "--config-path"
      - /risingwave.toml
    expose:
      - "4566"
    ports:
      - "4566:4566"
    depends_on:
      - meta-node
    volumes:
      - "./risingwave.toml:/risingwave.toml"
    environment:
      RUST_BACKTRACE: "1"
    container_name: frontend-node
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/4566; exit $$?;'
      interval: 1s
      timeout: 5s
      retries: 5
  meta-node:
    image: "ghcr.io/risingwavelabs/risingwave:v1.1.2"
    command:
      - meta-node
      - "--listen-addr"
      - "0.0.0.0:5690"
      - "--advertise-addr"
      - "meta-node:5690"
      - "--dashboard-host"
      - "0.0.0.0:5691"
      - "--backend"
      - etcd
      - "--etcd-endpoints"
      - "etcd:2388"
      - "--connector-rpc-endpoint"
      - "connector-node:50051"
      - "--state-store"
      - "hummock+minio://hummockadmin:hummockadmin@minio:9301/hummock001"
      - "--data-directory"
      - "hummock_001"
      - "--config-path"
      - /risingwave.toml
    expose:
      - "5690"
      - "5691"
    ports:
      - "5690:5690"
      - "5691:5691"
    depends_on:
      - "etcd"
    volumes:
      - "./risingwave.toml:/risingwave.toml"
    environment:
      RUST_BACKTRACE: "1"
    container_name: meta-node
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5690; exit $$?;'
      interval: 1s
      timeout: 5s
      retries: 5
  minio:
    image: "quay.io/minio/minio:latest"
    command:
      - server
      - "--address"
      - "0.0.0.0:9301"
      - "--console-address"
      - "0.0.0.0:9400"
      - /data
    expose:
      - "9301"
      - "9400"
    ports:
      - "9301:9301"
      - "9400:9400"
    depends_on: []
    volumes:
      - "minio:/data"
    entrypoint: "

      /bin/sh -c '

      set -e

      mkdir -p \"/data/hummock001\"

      /usr/bin/docker-entrypoint.sh \"$$0\" \"$$@\"

      '"
    environment:
      MINIO_CI_CD: "1"
      MINIO_ROOT_PASSWORD: hummockadmin
      MINIO_ROOT_USER: hummockadmin
    container_name: minio
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/9301; exit $$?;'
      interval: 1s
      timeout: 5s
      retries: 5

  # Access the cli by running:
  # > docker-compose exec -it psql psql postgres://root@frontend-node:4566/dev
  psql:
    image: postgres
    depends_on:
      - frontend-node
    command: sleep infinity


volumes:
  etcd:
    external: false
  minio:
    external: false